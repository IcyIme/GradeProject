@page "/Account/Login"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using GradeProject.Data
@using GradeProject.Components.Layout

@layout EmptyLayout
@inject SignInManager<ApplicationUser> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Log in</PageTitle>

<body>
    <section class="h-100">
        <div class="container h-100">
            <div class="row justify-content-sm-center h-100">
                <div class="col-xxl-4 col-xl-5 col-lg-5 col-md-7 col-sm-9">
                    <div class="text-center my-5">
                        <img src="/img/logo2.png" alt="logo" width="600">
                    </div>
                    <div class="card shadow-lg">
                        <div class="card-body p-5">
                            <h1 class="fs-4 card-title fw-bold mb-4">Prihlásenie</h1>
                            <StatusMessage Message="@errorMessage" />
                            <EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login">
                                <DataAnnotationsValidator />
                                <div class="mb-3">
                                    <label class="text-muted" for="email">Email</label>
                                    <InputText id="email" @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com"/>
                                    <ValidationMessage For="() => Input.Email" class="text-danger"/>
                                </div>

                                <div class="mb-3">
                                    <div class="mb-2 w-100">
                                        <label class="text-muted" for="password">Heslo</label>
                                        <a href="Account/ForgotPassword" class="float-end">
                                            Zabudli ste heslo?
                                        </a>
                                    </div>
                                    <InputText id="password" type="password" @bind-Value="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
                                    <ValidationMessage For="() => Input.Password" class="text-danger" />
                                </div>

                                <div class="d-flex align-items-center">
                                    <div class="form-check">
                                        <InputCheckbox @bind-Value="Input.RememberMe" class="darker-border-checkbox form-check-input" />

                                        <label for="remember" class="form-check-label">Zapamätať si ma</label>
                                    </div>
                                    <button type="submit" class="btn btn-primary ms-auto">
                                        Prihlásiť sa
                                    </button>
                                </div>
                            </EditForm>
                        </div>
                        <div class="card-footer py-3 border-0">
                            <div class="text-center">
                                <a href="@(NavigationManager.GetUriWithQueryParameters("Account/Register", new Dictionary<string, object?> { ["ReturnUrl"] = ReturnUrl }))">Register as a new user</a>
                            </div>
                        </div>
                    </div>
                    <p class="text-center">© @DateTime.Today.Year Grade - All Rights Reserved.</p>
                </div>
            </div>
        </div>
    </section>
</body>


@code {
    private string? errorMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            // Clear the existing external cookie to ensure a clean login process
            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
        }
    }

    public async Task LoginUser()
    {

        // This doesn't count login failures towards account lockout
        // To enable password failures to trigger account lockout, set lockoutOnFailure: true
        var result = await SignInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: false);
        if (result.Succeeded)
        {
            Logger.LogInformation("User logged in.");
            RedirectManager.RedirectTo(ReturnUrl);
        }
        else if (result.RequiresTwoFactor)
        {
            RedirectManager.RedirectTo(
                "Account/LoginWith2fa",
                new() { ["returnUrl"] = ReturnUrl, ["rememberMe"] = Input.RememberMe });
        }
        else if (result.IsLockedOut)
        {
            Logger.LogWarning("User account locked out.");
            RedirectManager.RedirectTo("Account/Lockout");
        }
        else
        {
            errorMessage = "Chyba: Neplatný pokus o prihlásenie.";
        }
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Display(Name = "Remember me?")]
        public bool RememberMe { get; set; }
    }
}
