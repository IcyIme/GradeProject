@page "/rooms/create"

@inject IForumService ForumService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

@attribute [Authorize]

@using System.Security.Claims

    <div class="bgtext">
        <form @onsubmit="CreateRoom">
            <label>Názov</label> <br/>
            <RadzenTextBox type="text" @bind-value="newRoomTitle" MaxLength="40"></RadzenTextBox><br/>
            <br/>
            <label>Detail problému</label><br />
            <RadzenHtmlEditor @bind-Value=@newRoomDetail style="height: 400px;"  UploadUrl="upload/image" /> <br/>
            <p style="color: red;">@errorMessage</p>
            <RadzenButton type="submit" Text="Vytvoriť"></RadzenButton>
        </form>
    </div>
    

@code {
    private string newRoomTitle;
    private string newRoomDetail;
    private string errorMessage;

    private async Task CreateRoom()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var userId = authState.User?.FindFirstValue(ClaimTypes.NameIdentifier);

        if (string.IsNullOrEmpty(newRoomTitle))
        {
            errorMessage = "Názov nemôže byť prázdny";
            return;
        }

        var room = new ForumRoom
        {
            Title = newRoomTitle,
            Detail = newRoomDetail,
            DateOfCreation = DateTime.UtcNow
        };

        try
        {
            await ForumService.CreateRoomAsync(room, userId);
            NavigationManager.NavigateTo($"/rooms/room/{room.Id}");
        }
        catch (Exception ex)
        {
            errorMessage = $"Failed to create room: {ex.Message}";
        }
    }
}