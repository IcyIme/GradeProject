@page "/rooms"
@inject IForumService ForumService
@inject NavigationManager NavigationManager

<div class="bgtext justify-content-center">
    <h1>Menu miestnosti</h1>
</div>

@if (rooms != null)
{
    @foreach (var room in rooms.OrderByDescending(r => r.DateOfCreation))
    {
        <div class="bgt spacing">
            <a @onclick="() => ShowRoomDetails(room.Id)">
                <h2>@room.Title</h2>
                <h5>@((MarkupString) GetFirst10Words(room.Detail))...</h5>
                <p>@room.DateOfCreation.ToShortDateString()</p>
                <p>Owner: @(userNames.ContainsKey(room.OwnerId) ? userNames[room.OwnerId] : "Loading...")</p>
            </a>
        </div>
    }
}
else
{
    <div class="rz-m-12">
        <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
    </div>
}

@code {
    private List<ForumRoom> rooms = new List<ForumRoom>();
    private Dictionary<string, string> userNames = new Dictionary<string, string>();

    protected override async Task OnInitializedAsync()
    {
        rooms = await ForumService.GetRoomsAsync();

        // Načítanie mien používateľov pre každú miestnosť
        foreach (var room in rooms)
        {
            if (!userNames.ContainsKey(room.OwnerId))
            {
                var userName = await ForumService.GetUserNameAsync(room.OwnerId);
                userNames[room.OwnerId] = userName;
            }
        }
    }

    private void ShowRoomDetails(int roomId)
    {
        NavigationManager.NavigateTo($"/rooms/room/{roomId}");
    }

    private string GetFirst10Words(string text)
    {
        if (string.IsNullOrEmpty(text)) return text;

        var words = text.Split(' ');
        if (words.Length <= 10)
        {
            return text;
        }
        return string.Join(' ', words.Take(10)) + "...";
    }
}